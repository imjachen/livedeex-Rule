[General]
# ---(通用)---
# 延迟测试
# > Internet 测试 URL
internet-test-url = http://www.aliyun.com
# > 代理测速 URL
proxy-test-url = http://www.gstatic.com/generate_204
# > 测试超时（秒）
# test-timeout = 5
# TLS 引擎
# tls-provider = openssl
# IPv6 支持（关闭）
ipv6 = false
# ------
# ---(网络优化)---
# > 增强版 WiFi 助理
# Surge会在WiFi网络不佳时尝试使用数据网络建立连接
wifi-assist = true
# ------
# ---(Wi-Fi 访问)---
allow-wifi-access = false
wifi-access-http-port = 6152
wifi-access-socks5-port = 6153
# ------
# ---(远程控制器)---
# 允许 Surge 请求查看器或 Surge CLI 进行管理控制。
# 如果允许由 Wi-Fi 控制则将「127.0.0.1」修改为「0.0.0.0」
# external-controller-access = password@0.0.0.0:6170
# ------
# ---(兼容性)---
# 兼容模式
# compatibility-mode = 0
# 跳过代理
skip-proxy = 127.0.0.1, 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12, 100.64.0.0/10, localhost, *.local, mfs.ykimg.com*.ttf
# 排除简单主机名
exclude-simple-hostnames = true
# SSID 组策略
# 当 Wi-Fi 不是首选网络时 SSID 组策略使用默认策略（仅 macOS 版）
# use-default-policy-if-wifi-not-primary = false
# ------
# ---(DNS 服务器)---
# 电信 118.118.118.118
# 联通 116.116.116.116
dns-server = 223.5.5.5, 119.29.29.29, 4.2.2.2
# DoH 请求通过代理策略执行
# doh-follow-outbound-mode = false
# ------
# ---(实验性功能)---
# 使用 Network framework
# network-framework = true
# ------
# ---(高级)---
# 日志级别
loglevel = warning
# 当遇到 REJECT 策略时返回错误页
show-error-page-for-reject = true
# Always Real IP Hosts
# 当 Surge VIF 处理 DNS 问题时，此选项要求 Surge 返回一个真正的 IP 地址，而不是一个假 IP 地址。
# DNS 数据包将被转发到上游 DNS 服务器。
always-real-ip = msftconnecttest.com, msftncsi.com, *.msftconnecttest.com, *.msftncsi.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com
# TCP Force HTTP Hosts
# 让 Surge 把 TCP 连接当作 HTTP 请求来处理。Surge HTTP 引擎将处理这些请求，所有的高级功能，如捕获、重写和脚本等都可以使用。
force-http-engine-hosts = *.ott.cibntv.net,123.59.31.1,119.18.193.135,122.14.246.33,175.102.178.52
geoip-maxmind-url = https://cdn.jsdelivr.net/gh/Hackl0us/GeoIP2-CN@release/Country.mmdb
include-all-networks = false
http-api-tls = true
http-api-web-dashboard = true
hide-vpn-icon = false
ipv6-vif = disabled
# 游戏udp优化
udp-priority = true
# 开启后 Surge 在切换网络后不再重新进行 VPN 配置tune开启，false关闭
fast-switch = false
allow-hotspot-access = false
# 解决部分app无法投屏
# tun-excluded-routes = 239.255.255.250/32
external-controller-access = CN112211@0.0.0.0:6170
test-timeout = 5
#用于Mac端dns劫持避免冲突
hijack-dns = 223.5.5.5, 119.29.29.29, 4.2.2.2

[Replica]
# ---(实验性功能)---
# 0 为关闭，1 为开启
# > 隐藏 Apple 请求
hide-apple-request = 1
# > 隐藏崩溃追踪器请求
hide-crash-reporter-request = 1
# > 隐藏 UDP 会话
hide-udp = 0
# > 关键词过滤器
# none（关闭关键词过滤器） / whitelist（blacklist（仅记录包含关键字的请求）） / blacklist（仅记录不包含关键字的请求） / pattern（匹配通配符的请求）
keyword-filter-type = none
# > 关键词
keyword-filter = (null)
# ------

[Proxy]
# 当请求为 HTTP 请求时返回一个极小的 GIF
# REJECT-TINYGIF = reject-tinygif
# 阻止请求
# REJECT = reject
# 直接连接
🇨🇳 Netease Proxy China 1 = http, os.tencentcdn.net, 25000, tfo=true
# 网易音乐解锁
🇨🇳 Netease Proxy China 2 = http, pc.tencentcdn.net, 35000, tfo=true

[Proxy Group]
# 该段定义可用的策略组
# 一个策略组可以包括多个子策略.
# 子策略可以是一个代理策略，或者另一个策略组，或者是一个内置策略 (DIRECT 或 REJECT).
# 有 5 种策略组类型: "select", "url-test", "fallback", "ssid" 和 "load-balance"
# select: 具体哪个子策略将被使用，由用户界面上进行选择。
# url-test: 具体哪个子策略将被使用，通过测试到具体 URL 的访问速度选择延迟最低的策略
# 参数:
# url: 测试时用到的目标 URL.
# interval: 可选, 秒 (默认值: 600s)
# 指定在多长时间后，上次的测试结果将被抛弃。
# tolerance: 可选, 毫秒 (默认值: 100ms)
# 只有当新的优选线路，比原优选线路的响应时间，大于该值的时候，才会触发线路变更。
# timeout: 可选, 秒 (默认值: 5s)
# 如果某策略在该时间后依然没有完成，放弃该策略。
# fallback: 与 url-test 组基本一致，区别是只关心子策略是否可用而不关心具体延迟，然后
# 从可用策略中选择靠前的策略。可以通过调小 timeout 参数将缓慢线路也标记为不可用。
# 该类型没有 tolerance 参数。
# ssid: 具体哪个子策略将被使用，根据 Wi-FI 的 SSID、BSSID、路由 IP 地址决定
# 参数:
# default: 必填
# 默认策略。
# cellular: 可选
# 在数据网络下的策略。 若不填，那么默认策略将被使用。
# load-balance: 随机从子策略中选取一个策略使用。当配置了 url 参数时，会
# 按照 fallback 组的行为进行可用性检查，然后仅从可用的子策略中随机选取。
# 参数:
# 除 url、timeout、interval外，还有一个参数：
# persistent：当 persistent=true 时，对于同一目标主机名，将尽量使用同一个策略。
# 避免因出口 IP 不同而触发目标网站的风险控制。但当可用性改变时可能导致策略变化。
ProxyList = select, hidden=1, update-interval=0, no-alert=0, include-all-proxies=0, include-other-group="1, 2"
Outbound = fallback, 香港节点, 台湾节点, 狮城节点, 日本节点, 韩国节点, 美国节点, Other, no-alert=0, hidden=0, include-all-proxies=0
Telegram = select, Outbound, 香港节点, 台湾节点, 狮城节点, 日本节点, 美国节点, 韩国节点, Other, no-alert=0, hidden=0, include-all-proxies=0
YouTube = select, Outbound, 香港节点, 台湾节点, 狮城节点, 日本节点, 韩国节点, 美国节点, Other, persistent=true, no-alert=0, hidden=0, include-all-proxies=0
Netflix = select, Outbound, 香港节点, 台湾节点, 狮城节点, 日本节点, 美国节点, 韩国节点, Other, persistent=true, no-alert=0, hidden=0, include-all-proxies=0
Bilibili = select, DIRECT, Outbound, 香港节点, 台湾节点, 日本节点, 美国节点, 狮城节点, 韩国节点, Other, no-alert=0, hidden=0, include-all-proxies=0
Bahamut = select, 台湾节点, DIRECT, hidden=1, persistent=true
Tiktok = select, Outbound, 台湾节点, 香港节点, 狮城节点, 日本节点, 韩国节点, 美国节点, Other, persistent=true
PayPal = select, Outbound, 香港节点, 台湾节点, 狮城节点, 日本节点, 韩国节点, 美国节点, Other, persistent=true
Game = select, Outbound, 香港节点, 台湾节点, 狮城节点, 日本节点, 韩国节点, 美国节点, Other, persistent=true
Apple = select, DIRECT, Outbound, 香港节点, 台湾节点, 狮城节点, 日本节点, 美国节点, 韩国节点, Other
Steaming = select, Outbound, 香港节点, 台湾节点, 狮城节点, 日本节点, 韩国节点, 美国节点, Other, persistent=true, no-alert=0, hidden=0, include-all-proxies=0
NeteaseMusic = select, DIRECT, 🇨🇳 Netease Proxy China 1, 🇨🇳 Netease Proxy China 2, no-alert=0, hidden=0, include-all-proxies=0
Final = select, Outbound, DIRECT, 香港节点, 台湾节点, 狮城节点, 日本节点, 韩国节点, 美国节点, Other, persistent=true, no-alert=0, hidden=0, include-all-proxies=0
香港节点 = url-test, include-other-group=ProxyList, policy-regex-filter=(?i)(港|HK|Hong), timeout=0, interval=0, tolerance=20, no-alert=0, hidden=1, include-all-proxies=0
台湾节点 = url-test, include-other-group=ProxyList, policy-regex-filter=(?i)(台|TW|Tai), timeout=0, interval=0, tolerance=20, no-alert=0, hidden=1, include-all-proxies=0
狮城节点 = url-test, include-other-group=ProxyList, policy-regex-filter=(?i)(新加坡|坡|狮城|SG|Singapore), timeout=0, interval=0, tolerance=20, no-alert=0, hidden=1, include-all-proxies=0
日本节点 = url-test, include-other-group=ProxyList, policy-regex-filter=(?i)(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan), timeout=0, interval=0, tolerance=20, no-alert=0, hidden=1, include-all-proxies=0
美国节点 = url-test, include-other-group=ProxyList, policy-regex-filter=(?i)(美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States), timeout=0, interval=0, tolerance=20, no-alert=0, hidden=1, include-all-proxies=0
韩国节点 = url-test, include-other-group=ProxyList, policy-regex-filter=(?i)(KR|Korea|KOR|首尔|韩|韓), no-alert=0, timeout=0, tolerance=20, hidden=1, include-all-proxies=0
Other = select, include-other-group=ProxyList, policy-regex-filter=^(?!.*(港|美|新加坡|韩|日|台|剩余|到期|US|SG|JP|TW|HK|KR|Traffic|Expire)), update-interval=0, no-alert=0, hidden=0, include-all-proxies=0
AdBlock = select, REJECT, DIRECT, REJECT-TINYGIF
1 = select, policy-path=订阅链接, update-interval=0, no-alert=0, hidden=0, include-all-proxies=0
2 = select, policy-path=订阅链接, update-interval=0, no-alert=0, hidden=0, include-all-proxies=0

[Rule]
# apple推送通知直链优化
RULE-SET,https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Rule/ApplePushNotificationService.list,DIRECT
# Privacy 隐私
RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Privacy.list,AdBlock
# Hijacking 运营商劫持或恶意网站
RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Hijacking.list,AdBlock
# Unbreak 后续规则修正
RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Unbreak.list,DIRECT
# 应用代理
# pikpak
DOMAIN-SUFFIX,mypikpak.com,Steaming // Added for: api-drive.mypikpak.com:443
# wechat直连
RULE-SET,https://raw.githubusercontent.com/NobyDa/Script/master/Surge/WeChat.list,DIRECT
# SpeedTest
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Speedtest/Speedtest.list,Outbound
# Telegram
RULE-SET,https://raw.githubusercontent.com/VirgilClyne/GetSomeFries/main/ruleset/ASN.Telegram.list,Telegram
# RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/Telegram/TelegramSG.list,Telegram
# PayPal
RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/PayPal.list,PayPal
# bilibili 哔哩哔哩
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/BiliBili/BiliBili.list,Bilibili
# 巴哈姆特
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Bahamut/Bahamut.list,Bahamut
# YouTube
RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Video/YouTube.list,YouTube
# Netflix
RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Video/Netflix.list,Netflix
# Tiktok 分流规则
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/TikTok/TikTok.list,Tiktok
# 游戏分流规则
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Epic/Epic.list,Game
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Sony/Sony.list,Game
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Steam/Steam.list,Game
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Nintendo/Nintendo.list,Game
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Riot/Riot.list,Game
# Streaming 国际流媒体服务
RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Streaming.list,Steaming
# Apple 服务
RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/Apple/Apple.list,Apple
# Global 全球加速
RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Global.list,Outbound
# 网易云解锁
RULE-SET,https://raw.githubusercontent.com/AGWA5783/Profiles/master/Surge/Ruleset/StreamingMedia/Music/NeteaseMusic.list,NeteaseMusic
# China 中国直连
# RULE-SET,https://raw.githubusercontent.com/VirgilClyne/GetSomeFries/main/ruleset/ASN.China.list,DIRECT
RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/China.list,DIRECT
# GeoIP China
GEOIP,CN,DIRECT
FINAL,Final,dns-failed

[Host]
# 该段定义本地 DNS 记录
# 该功能等同于 /etc/hosts，加上了泛解析和别名支持。
# 淘宝
*.taobao.com = server:223.5.5.5
# 天猫
*.tmall.com = server:223.5.5.5
# 阿里云
*.alicdn.com = server:223.5.5.5
*.aliyun.com = server:223.5.5.5
# 腾迅
*.tencent.com = server:119.29.29.29
# 腾讯QQ
*.qq.com = server:119.29.29.29
# 微信
*.weixin.com = server:119.29.29.29
*.qpic.cn = server:119.29.29.29
# 京东
*.jd.com = server:119.29.29.29
# 哔哩哔喱
*.bilibili.com = server:119.29.29.29
hdslb.com = server:119.29.29.29
# 网易
*.163.com = server:119.29.29.29
*.126.com = server:119.29.29.29
*.126.net = server:119.29.29.29
*.127.net = server:119.29.29.29
*.netease.com = server:119.29.29.29
# 小米
*.mi.com = server:119.29.29.29
*.xiaomi.com = server:119.29.29.29

[Header Rewrite]
^https?:\/\/.*\.zhihu\.com\/(question|topic) header-replace User-Agent "osee2unifiedRelease/4432 osee2unifiedReleaseVersion/7.8.0 Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mo    bile/15E148"

[Script]
# bilibili 自动切换策略
# Bili Region = type=http-response,pattern=^https:\/\/ap(p|i)\.bilibili\.com\/(pgc\/view\/(v\d\/)?app|x(\/v\d)?\/view\/video)\/(season|online)\?access_key,requires-body=1,max-size=0,control-api=1,script-path=https://raw.githubusercontent.com/NobyDa/Script/master/Surge/JS/Bili_Auto_Regions.js
# bilibili 地区搜索脚本
# Bili Search = type=http-request,pattern=^https:\/\/app\.bilibili\.com\/x\/v\d\/search(\/type)?\?.+?%20(%E6%B8%AF|%E5%8F%B0|%E4%B8%AD)&,script-path=https://raw.githubusercontent.com/NobyDa/Script/master/Surge/JS/Bili_Auto_Regions.js
# 捷径切换策略
# 捷径策略切换 = type=http-request,pattern=^http:\/\/nobyda\.policy,requires-body=1,script-path=https://raw.githubusercontent.com/NobyDa/Script/master/Shortcuts/PolicySwitch.js

